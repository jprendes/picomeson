# yaml-language-server: $schema=https://json.schemastore.org/github-action.json

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  run-tests:
    name: Run test on picolibc
    runs-on: "ubuntu-latest"
    steps:
    - name: Checkout picomeson
      uses: actions/checkout@v4
    - name: Checkout picolibc
      uses: actions/checkout@v4
      with:
        repository: "picolibc/picolibc"
        path: "picolibc"
        ref: 4e451fe9b2a63b6bde94e857b2c5dce6cf59c9ae
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - uses: Swatinem/rust-cache@v2
    - name: Run tests
      shell: bash
      run: |
        cargo run -p picomeson-cli -- \
          ./build \
          ./picolibc \
          --buildtype=release \
          -Dmultilib=false \
          -Dformat-default=double \
          -Dposix-console=false \
          -Dprintf-aliases=false \
          -Dpicocrt=false \
          -Dinitfini-array=true \
          -Dsingle-thread=true \
          -Denable-malloc=false \
          -Dnewlib-nano-malloc=false \
          -Dthread-local-storage=false \
          -Dnewlib-global-errno=true \
          -Dtests=false \
          -Dsemihost=false \
          -Dspecsdir=none \
          -Dtinystdio=true \
          -Dio-c99-formats=false \
          -Dio-wchar=true \
          -Dfreestanding=true

  spelling:
    name: Spell check with typos
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Spell Check Repo
      uses: crate-ci/typos@master
  
  check:
    name: Lint
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - name: Setup nightly toolchain
        shell: bash
        run: rustup toolchain install nightly --component rustfmt # needed to run rustfmt in nightly toolchain
      - name: Check formatting
        shell: bash
        run: cargo +nightly fmt -- --check
      - name: Check clippy
        shell: bash
        run: cargo clippy -- -D warnings